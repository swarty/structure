@mixin r($screen) {
	@media all and (max-width: $screen+'px') {
		@content;
	}
}

@mixin b($screen) {
	@media all and (max-height: $screen+'px') {
		@content;
	}
}

// px to rem
@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

@mixin size($width,$height: $width) {
  width: $width;
  height: $height;
}


@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false) {
	@font-face {
		font-family: $font-family;
		font-weight: $weight;
		font-style: $style;
		font-display: swap;
		src: url('#{$file-path}#{$font-family}.eot');
		src: url('#{$file-path}#{$font-family}.woff2') format('woff2');
	}
}

// @mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false ){
//   @font-face{
//     font-family: $font-family;
//     font-weight: $weight;
//     font-style: $style;

//     @if ($asset-pipeline == true){
//       src: font-url('#{$file-path}.eot');
// 		src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'), font-url('#{$file-path}.ttf') format('truetype'), font-url('#{$file-path}.woff') format('woff'), font-url('#{$file-path}.woff2') format('woff2');
// 		} @else{
//       src: url('#{$file-path}.eot');
// 			src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.ttf') format('truetype'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.woff2') format('woff2');
// 		}

// 		}
// }